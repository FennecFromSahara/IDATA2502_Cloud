name: "Terraform"

on:
  push:
    branches: ["main"]
  pull_request:

permissions:
  contents: read

jobs:
  terraform-test:
    name: "Terraform test"
    runs-on: ubuntu-latest
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
        working-directory: ./src

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up GCP credentials
        env:
          GCP_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}
        run: |
          echo "$GCP_CREDENTIALS" > gcp-credentials.json

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.21.4"

      - name: Terraform Init
        run: terraform init

      - name: Run Terratest
        run: |
          cd ../test
          go mod tidy
          go test -v -timeout 10m

  terraform-deploy:
    name: "Terraform deploy"
    needs: terraform-test
    runs-on: ubuntu-latest
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
        working-directory: ./src

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up GCP credentials
        env:
          GCP_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}
        run: |
          echo "$GCP_CREDENTIALS" > gcp-credentials.json

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan -input=false

        # On push to "main", build or change infrastructure according to Terraform configuration files
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve -input=false
